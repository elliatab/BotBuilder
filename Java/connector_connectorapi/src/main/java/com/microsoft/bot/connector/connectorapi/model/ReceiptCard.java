/**
 * Microsoft Bot Connector API - v3.0
 * ﻿The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector/Swagger/ConnectorAPI.json)    © 2016 Microsoft
 *
 * OpenAPI spec version: v3
 * Contact: botframework@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.microsoft.bot.connector.connectorapi.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.microsoft.bot.connector.connectorapi.model.CardAction;
import com.microsoft.bot.connector.connectorapi.model.Fact;
import com.microsoft.bot.connector.connectorapi.model.ReceiptItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * A receipt card
 */
@ApiModel(description = "A receipt card")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-26T13:22:14.004+09:00")
public class ReceiptCard   {
  @SerializedName("title")
  private String title = null;

  @SerializedName("items")
  private List<ReceiptItem> items = new ArrayList<ReceiptItem>();

  @SerializedName("facts")
  private List<Fact> facts = new ArrayList<Fact>();

  @SerializedName("tap")
  private CardAction tap = null;

  @SerializedName("total")
  private String total = null;

  @SerializedName("tax")
  private String tax = null;

  @SerializedName("vat")
  private String vat = null;

  @SerializedName("buttons")
  private List<CardAction> buttons = new ArrayList<CardAction>();

  public ReceiptCard title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the card
   * @return title
  **/
  @ApiModelProperty(example = "null", value = "Title of the card")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ReceiptCard items(List<ReceiptItem> items) {
    this.items = items;
    return this;
  }

  public ReceiptCard addItemsItem(ReceiptItem itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Array of Receipt Items
   * @return items
  **/
  @ApiModelProperty(example = "null", value = "Array of Receipt Items")
  public List<ReceiptItem> getItems() {
    return items;
  }

  public void setItems(List<ReceiptItem> items) {
    this.items = items;
  }

  public ReceiptCard facts(List<Fact> facts) {
    this.facts = facts;
    return this;
  }

  public ReceiptCard addFactsItem(Fact factsItem) {
    this.facts.add(factsItem);
    return this;
  }

   /**
   * Array of Fact Objects   Array of key-value pairs.
   * @return facts
  **/
  @ApiModelProperty(example = "null", value = "Array of Fact Objects   Array of key-value pairs.")
  public List<Fact> getFacts() {
    return facts;
  }

  public void setFacts(List<Fact> facts) {
    this.facts = facts;
  }

  public ReceiptCard tap(CardAction tap) {
    this.tap = tap;
    return this;
  }

   /**
   * This action will be activated when user taps on the card
   * @return tap
  **/
  @ApiModelProperty(example = "null", value = "This action will be activated when user taps on the card")
  public CardAction getTap() {
    return tap;
  }

  public void setTap(CardAction tap) {
    this.tap = tap;
  }

  public ReceiptCard total(String total) {
    this.total = total;
    return this;
  }

   /**
   * Total amount of money paid (or should be paid)
   * @return total
  **/
  @ApiModelProperty(example = "null", value = "Total amount of money paid (or should be paid)")
  public String getTotal() {
    return total;
  }

  public void setTotal(String total) {
    this.total = total;
  }

  public ReceiptCard tax(String tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Total amount of TAX paid(or should be paid)
   * @return tax
  **/
  @ApiModelProperty(example = "null", value = "Total amount of TAX paid(or should be paid)")
  public String getTax() {
    return tax;
  }

  public void setTax(String tax) {
    this.tax = tax;
  }

  public ReceiptCard vat(String vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Total amount of VAT paid(or should be paid)
   * @return vat
  **/
  @ApiModelProperty(example = "null", value = "Total amount of VAT paid(or should be paid)")
  public String getVat() {
    return vat;
  }

  public void setVat(String vat) {
    this.vat = vat;
  }

  public ReceiptCard buttons(List<CardAction> buttons) {
    this.buttons = buttons;
    return this;
  }

  public ReceiptCard addButtonsItem(CardAction buttonsItem) {
    this.buttons.add(buttonsItem);
    return this;
  }

   /**
   * Set of actions applicable to the current card
   * @return buttons
  **/
  @ApiModelProperty(example = "null", value = "Set of actions applicable to the current card")
  public List<CardAction> getButtons() {
    return buttons;
  }

  public void setButtons(List<CardAction> buttons) {
    this.buttons = buttons;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiptCard receiptCard = (ReceiptCard) o;
    return Objects.equals(this.title, receiptCard.title) &&
        Objects.equals(this.items, receiptCard.items) &&
        Objects.equals(this.facts, receiptCard.facts) &&
        Objects.equals(this.tap, receiptCard.tap) &&
        Objects.equals(this.total, receiptCard.total) &&
        Objects.equals(this.tax, receiptCard.tax) &&
        Objects.equals(this.vat, receiptCard.vat) &&
        Objects.equals(this.buttons, receiptCard.buttons);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, items, facts, tap, total, tax, vat, buttons);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiptCard {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    facts: ").append(toIndentedString(facts)).append("\n");
    sb.append("    tap: ").append(toIndentedString(tap)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    buttons: ").append(toIndentedString(buttons)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

